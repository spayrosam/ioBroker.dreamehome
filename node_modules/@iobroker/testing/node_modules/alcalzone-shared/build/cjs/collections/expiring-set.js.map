{
  "version": 3,
  "sources": ["../../../src/collections/expiring-set.ts"],
  "sourcesContent": ["import { EventEmitter } from \"events\";\n\ninterface ExpiringSetEventCallbacks<T> {\n\texpired: (entry: T) => void;\n}\ntype ExpiringSetEvents<T> = keyof ExpiringSetEventCallbacks<T>;\n\nexport interface ExpiringSet<T> {\n\ton<TEvent extends ExpiringSetEvents<T>>(\n\t\tevent: TEvent,\n\t\tcallback: ExpiringSetEventCallbacks<T>[TEvent],\n\t): this;\n\tremoveListener<TEvent extends ExpiringSetEvents<T>>(\n\t\tevent: TEvent,\n\t\tcallback: ExpiringSetEventCallbacks<T>[TEvent],\n\t): this;\n\tremoveAllListeners(event?: ExpiringSetEvents<T>): this;\n}\n\n/**\n * A Set that automatically removes items after a certain time has elapsed since they were added\n */\nexport class ExpiringSet<T> extends EventEmitter {\n\t// The internal set used to store values\n\tprivate _set: Set<T>;\n\tprivate _timeouts = new Map<T, NodeJS.Timeout>();\n\n\t/**\n\t * The time in milliseconds each entry will last\n\t */\n\tpublic readonly expiryTime: number;\n\n\tpublic constructor(expiryTime: number, iterable?: Iterable<T> | null) {\n\t\tsuper();\n\t\tif (expiryTime < 1) {\n\t\t\tthrow new Error(\"The expiry time must be a positive integer\");\n\t\t}\n\t\tthis.expiryTime = expiryTime;\n\t\tthis._set = new Set(iterable);\n\t\tthis._set.forEach((entry) => this.queueForExpiry(entry));\n\t}\n\n\tprivate queueForExpiry(entry: T): void {\n\t\t// Clear old timeouts\n\t\tif (this._timeouts.has(entry)) {\n\t\t\tclearTimeout(this._timeouts.get(entry));\n\t\t}\n\n\t\tconst newTimeout = setTimeout(() => {\n\t\t\tthis._set.delete(entry);\n\t\t\tthis._timeouts.delete(entry);\n\t\t\tthis.emit(\"expired\", entry);\n\t\t}, this.expiryTime).unref();\n\t\tthis._timeouts.set(entry, newTimeout);\n\t}\n\n\tpublic add(value: T): this {\n\t\tthis._set.add(value);\n\t\tthis.queueForExpiry(value);\n\t\treturn this;\n\t}\n\n\tpublic clear(): void {\n\t\tthis._set.clear();\n\t\tthis._timeouts.forEach((timeout) => clearTimeout(timeout));\n\t\tthis._timeouts.clear();\n\t}\n\n\tpublic delete(value: T): boolean {\n\t\tconst ret = this._set.delete(value);\n\t\tif (this._timeouts.has(value)) {\n\t\t\tclearTimeout(this._timeouts.get(value));\n\t\t\tthis._timeouts.delete(value);\n\t\t}\n\t\treturn ret;\n\t}\n\n\tpublic forEach(\n\t\tcallbackfn: (value: T, value2: T, set: ExpiringSet<T>) => void,\n\t\tthisArg?: any,\n\t): void {\n\t\tthis._set.forEach((v1, v2) => callbackfn(v1, v2, this), thisArg);\n\t}\n\n\tpublic has(value: T): boolean {\n\t\treturn this._set.has(value);\n\t}\n\n\tpublic get size(): number {\n\t\treturn this._set.size;\n\t}\n\n\t/** Iterates over values in the set. */\n\tpublic [Symbol.iterator](): IterableIterator<T> {\n\t\treturn this._set[Symbol.iterator]();\n\t}\n\n\t/**\n\t * Returns an iterable of [v,v] pairs for every value `v` in the set.\n\t */\n\tpublic entries(): IterableIterator<[T, T]> {\n\t\treturn this._set.entries();\n\t}\n\n\t/**\n\t * Despite its name, returns an iterable of the values in the set,\n\t */\n\tpublic keys(): IterableIterator<T> {\n\t\treturn this._set.keys();\n\t}\n\n\t/**\n\t * Returns an iterable of values in the set.\n\t */\n\tpublic values(): IterableIterator<T> {\n\t\treturn this._set.values();\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;;;;;AAAA,oBAA6B;AAsBvB,MAAO,oBAAuB,2BAAY;;EAEvC;EACA,YAAY,oBAAI,IAAG;;;;EAKX;EAEhB,YAAmB,YAAoB,UAA6B;AACnE,UAAK;AACL,QAAI,aAAa,GAAG;AACnB,YAAM,IAAI,MAAM,4CAA4C;IAC7D;AACA,SAAK,aAAa;AAClB,SAAK,OAAO,IAAI,IAAI,QAAQ;AAC5B,SAAK,KAAK,QAAQ,CAAC,UAAU,KAAK,eAAe,KAAK,CAAC;EACxD;EAEQ,eAAe,OAAQ;AAE9B,QAAI,KAAK,UAAU,IAAI,KAAK,GAAG;AAC9B,mBAAa,KAAK,UAAU,IAAI,KAAK,CAAC;IACvC;AAEA,UAAM,aAAa,WAAW,MAAK;AAClC,WAAK,KAAK,OAAO,KAAK;AACtB,WAAK,UAAU,OAAO,KAAK;AAC3B,WAAK,KAAK,WAAW,KAAK;IAC3B,GAAG,KAAK,UAAU,EAAE,MAAK;AACzB,SAAK,UAAU,IAAI,OAAO,UAAU;EACrC;EAEO,IAAI,OAAQ;AAClB,SAAK,KAAK,IAAI,KAAK;AACnB,SAAK,eAAe,KAAK;AACzB,WAAO;EACR;EAEO,QAAK;AACX,SAAK,KAAK,MAAK;AACf,SAAK,UAAU,QAAQ,CAAC,YAAY,aAAa,OAAO,CAAC;AACzD,SAAK,UAAU,MAAK;EACrB;EAEO,OAAO,OAAQ;AACrB,UAAM,MAAM,KAAK,KAAK,OAAO,KAAK;AAClC,QAAI,KAAK,UAAU,IAAI,KAAK,GAAG;AAC9B,mBAAa,KAAK,UAAU,IAAI,KAAK,CAAC;AACtC,WAAK,UAAU,OAAO,KAAK;IAC5B;AACA,WAAO;EACR;EAEO,QACN,YACA,SAAa;AAEb,SAAK,KAAK,QAAQ,CAAC,IAAI,OAAO,WAAW,IAAI,IAAI,IAAI,GAAG,OAAO;EAChE;EAEO,IAAI,OAAQ;AAClB,WAAO,KAAK,KAAK,IAAI,KAAK;EAC3B;EAEA,IAAW,OAAI;AACd,WAAO,KAAK,KAAK;EAClB;;EAGO,CAAC,OAAO,QAAQ,IAAC;AACvB,WAAO,KAAK,KAAK,OAAO,QAAQ,EAAC;EAClC;;;;EAKO,UAAO;AACb,WAAO,KAAK,KAAK,QAAO;EACzB;;;;EAKO,OAAI;AACV,WAAO,KAAK,KAAK,KAAI;EACtB;;;;EAKO,SAAM;AACZ,WAAO,KAAK,KAAK,OAAM;EACxB;;",
  "names": []
}
